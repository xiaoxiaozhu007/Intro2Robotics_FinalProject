% RobotShapeData 
%Just some sample face and vertex data.
% platonic_solid by Kevin Moerman: https://www.mathworks.com/matlabcentral/fileexchange/28213-platonic-solid
% helped me generate these numbers
     %x,y,z
  
V1 = [-40, -45, -60;   %1
      -40, -45, 60;   %2
      -40, 45, -60;   %3
      -40, 45, 60;   %4
      40, -45, -60;   %5
      40, -45, 60;   %6
      40, 45, -60;   %7
      40, 45, 60;]; %8
  
V2 = [-40, -45, -60;   %1
      -40, -45, 60;   %2
      -40, 45, -60;   %3
      -40, 45, 60;   %4
      100, -45, -60;   %5
      100, -45, 60;   %6
      100, 45, -60;   %7
      100, 45, 60;]; %8
  
V3 = [-32, -45, -60;   %1
      -32, -45, 60;   %2
      -32, 45, -60;   %3
      -32, 45, 60;   %4
      218, -45, -60;   %5
      218, -45, 60;   %6
      218, 45, -60;   %7
      218, 45, 60;]; %8

% SMALL LEFT WALL IN DISPLAY
obst1_V = [-93, 140, -65;   %1
           -93, 140, 72;   %2
           -93, 375, -65;   %3
           -93, 375, 72;   %4
           -97, 140, -65;   %5
           -97, 140, 72;   %6
           -97, 375, -65;   %7
           -97, 375, 72;]; %8

%obst1_V = [obst1_V(:,1) * 10, obst1_V(:,2) * 230,obst1_V(:,3) * 160];
%obst1_V = [obst1_V(:,1) * 10 - 95 , obst1_V(:,2) * 230 + 140,obst1_V(:,3)*220-65];
%theta1 = 40;
%obst1_V = ([cosd(theta1),-sind(theta1),0; sind(theta1),cosd(theta1),0;0,0,1] * obst1_V')'; 
%obst1_V = [obst1_V(:,1) - 140 , obst1_V(:,2) + 140,obst1_V(:,3) - 70];


% CEILING
obst2_V = [-108, 140, 245;   %1
           -108, 140, 246;   %2
           -108, 375, 245;   %3
           -108, 375, 246;   %4
           213, 140, 245;   %5
           213, 140, 246;   %6
           213, 375, 245;   %7
           213, 375, 246;]; %8

% LEFT WALL
obst3_V = [-244, 95, -65;   %1
           -244, 95, 246;   %2
           -244, 375, -65;   %3
           -244, 375, 246;   %4
           -243, 95, -65;   %5
           -243, 95, 246;   %6
           -243, 375, -65;   %7
           -243, 375, 246;]; %8
       
% FLOOR
obst4_V = [0, 0, 0;   %1
           0, 0, 1;   %2
           0, 1, 0;   %3
           0, 1, 1;   %4
           1, 0, 0;   %5
           1, 0, 1;   %6
           1, 1, 0;   %7
           1, 1, 1;]; %8       
obst4_V = [obst4_V(:,1)* 1000 - 500, obst4_V(:,2)*1000 - 500, obst4_V(:,3) * 1-65];

% RIGHT WALL
obst5_V = [212, 95, -65;   %1
           212, 95, 246;   %2
           212, 375, -65;   %3
           212, 375, 246;   %4
           213, 95, -65;   %5
           213, 95, 246;   %6
           213, 375, -65;   %7
           213, 375, 246;]; %8
       
% BACK WALL
obst6_V = [-244, 374, -65;   %1
           -244, 374, 246;   %2
           -244, 375, -65;   %3
           -244, 375, 246;   %4
           213, 374, -65;   %5
           213, 374, 246;   %6
           213, 375, -65;   %7
           213, 375, 246;]; %8
       
% CUBBY HOLE HORIZONTAL
obst7_V = [0, 177, 157;   %1
           0, 177, 163;   %2
           0, 375, 157;   %3
           0, 375, 163;   %4
           51, 177, 157;   %5
           51, 177, 163;   %6
           51, 375, 157;   %7
           51, 375, 163;]; %8
       
% CUBBY HOLE VERTICAL
obst8_V = [0, 177, 157;   %1
           0, 177, 246;   %2
           0, 375, 157;   %3
           0, 375, 246;   %4
           5, 177, 157;   %5
           5, 177, 246;   %6
           5, 375, 157;   %7
           5, 375, 246;]; %8  
       
F_ALL = [1, 2, 4, 3; %left
           5, 6, 8, 7; %right
           1, 3, 7, 5; %bottom
           2, 4, 8, 6; %top
           1, 2, 6, 5; %front
           3, 4, 8, 7; %back
           ];   